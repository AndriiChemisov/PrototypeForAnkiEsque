<UserControl x:Class="PrototypeForAnkiEsque.Views.FlashcardViewUserControl"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PrototypeForAnkiEsque"
        xmlns:viewModels="clr-namespace:PrototypeForAnkiEsque.ViewModels"
        xmlns:converters="clr-namespace:PrototypeForAnkiEsque.Converters"
        mc:Ignorable="d"
        Height="500" Width="800">

    <UserControl.Resources>
        <Storyboard x:Key="FadeOutAnimation" AutoReverse="False" Completed="FadeOutAnimation_Completed">
            <DoubleAnimation
            Storyboard.TargetName="RatingMessageTextBlock"
            Storyboard.TargetProperty="Opacity"
            From="1" To="0" Duration="0:0:2" />
            <DoubleAnimation
            Storyboard.TargetName="MotivationalMessageBlock"
            Storyboard.TargetProperty="Opacity"
            From="1" To="0" Duration="0:0:2" />
        </Storyboard>
        <!-- Register the BooleanToVisibilityConverter as a resource -->
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
    </UserControl.Resources>

    <Grid>
        <Grid x:Name="MainGrid" Visibility="{Binding IsGridVisible, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=True}">
            <!-- TextBox for front of the card, visibility bound to IsAnswerVisible -->
            <TextBox x:Name="FrontTextBox" Text="{Binding CurrentCard.Front}" HorizontalAlignment="Center" VerticalAlignment="Center" 
                     Margin="20" FontSize="75" IsReadOnly="True" Background="#1d1d1d"
                     BorderBrush="#515ff9" BorderThickness="1" Foreground="LightGray"
                     Width="300" Height="300" TextWrapping="Wrap" TextAlignment="Center"
                     VerticalContentAlignment="Center"
                     Visibility="{Binding IsAnswerVisible, Converter={StaticResource BooleanToVisibilityConverter},
                     ConverterParameter=False}" FocusVisualStyle="{x:Null}"/>

            <!-- TextBox for back of the card, visibility bound to IsAnswerVisible -->
            <TextBox x:Name="BackTextBox" Text="{Binding FormattedBack}" HorizontalAlignment="Center" VerticalAlignment="Center" 
                     Margin="20" FontSize="75" IsReadOnly="True" Background="#1d1d1d"
                     BorderBrush="#515ff9" BorderThickness="1" Foreground="LightGray"
                     Width="300" Height="300" TextWrapping="Wrap" TextAlignment="Center"
                     VerticalContentAlignment="Center" 
                     Visibility="{Binding IsAnswerVisible, Converter={StaticResource BooleanToVisibilityConverter},
                     ConverterParameter=True}" FocusVisualStyle="{x:Null}"/>

            <!-- Button to toggle visibility between front and back -->
            <Button Content="Flip" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0, 0, 0,60" Width="75" Height="35" Command="{Binding ShowAnswerCommand}" Style="{DynamicResource StandartButton}"/>

            <!-- Button to go to the next card -->
            <Button Content="Next" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="10" Width="75" Height="35" Command="{Binding NextCommand}" Style="{DynamicResource StandartButton}"/>

            <Button Content="Back" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10" Width="75" Height="35" Command="{Binding OpenDeckSelectionCommand}" Style="{DynamicResource StandartButton}"/>

            <Border BorderBrush="#515ff9" BorderThickness="2" CornerRadius="15" Height="35" 
        HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="10" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <!-- Button 1 (Easy) -->
                        <ColumnDefinition Width="2"/>
                        <!-- Separator -->
                        <ColumnDefinition Width="Auto"/>
                        <!-- Button 2 (Good) -->
                        <ColumnDefinition Width="2"/>
                        <!-- Separator -->
                        <ColumnDefinition Width="Auto"/>
                        <!-- Button 3 (Hard) -->
                    </Grid.ColumnDefinitions>

                    <!-- Easy Button (Left-most button with rounded corners) -->
                    <Button Grid.Column="0" Content="Easy" Width="75" Command="{Binding EaseCommand}" 
                CommandParameter="0" 
                IsEnabled="{Binding IsRatingClicked, Converter={StaticResource InverseBooleanConverter}}"
                Style="{DynamicResource EaseButton}" Panel.ZIndex="0">
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" 
                            BorderThickness="0" CornerRadius="15,0,0,15">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5"/>
                                </Border>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>

                    <!-- Vertical Separator -->
                    <Rectangle Grid.Column="1" Width="2" Fill="#515ff9" VerticalAlignment="Stretch"/>

                    <!-- Good Button (No rounded corners) -->
                    <Button Grid.Column="2" Content="Good" Width="75" Command="{Binding EaseCommand}" 
                CommandParameter="1" Panel.ZIndex="0"
                IsEnabled="{Binding IsRatingClicked, Converter={StaticResource InverseBooleanConverter}}"
                Style="{DynamicResource EaseButton}"/>

                    <!-- Vertical Separator -->
                    <Rectangle Grid.Column="3" Width="2" Fill="#515ff9" VerticalAlignment="Stretch"/>

                    <!-- Hard Button (Right-most button with rounded corners) -->
                    <Button Grid.Column="4" Content="Hard" Width="75" Command="{Binding EaseCommand}" 
                CommandParameter="2" Panel.ZIndex="0"
                IsEnabled="{Binding IsRatingClicked, Converter={StaticResource InverseBooleanConverter}}"
                Style="{DynamicResource EaseButton}">
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" 
                            BorderThickness="0" CornerRadius="0,15,15,0">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5"/>
                                </Border>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </Grid>
            </Border>


            <!-- Rating message -->
            <TextBlock x:Name="RatingMessageTextBlock" Text="{Binding RatingMessage}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="60" FontSize="16" Foreground="Green"/>
        </Grid>
        <!--Motivational message -->
        <TextBlock x:Name="MotivationalMessageBlock" Text="{Binding MotivationalMessage}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="100" FontSize="27" Foreground="Green"/>
    </Grid>
</UserControl>

